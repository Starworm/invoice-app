/*
* --- General Rules ---
* Use underscore_names instead of camelCase
* Table names must be plural
* Spell out id fields (item_id instead of id)
* Don't use ambiguous column names
* Name foreign key columns the same as the columns they refer to
* Use CAPS for all SQL queries
*/

-- DROP TABLE IF EXISTS users;
-- CREATE TABLE users
-- (
--     id          bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     first_name  varchar(50)                                         NOT NULL,
--     last_name   varchar(50)                                         NOT NULL,
--     email       varchar(100) UNIQUE                                 NOT NULL,
--     password    varchar(255) DEFAULT Null,
--     address     varchar(255) DEFAULT NULL,
--     phone       varchar(20)  DEFAULT NULL,
--     title       varchar(50)  DEFAULT NULL,
--     bio         varchar(255) DEFAULT NULL,
--     enable      bool         DEFAULT FALSE,
--     non_locked  bool         DEFAULT TRUE,
--     using_mfa   bool         DEFAULT FALSE,
--     crated_date timestamp    DEFAULT current_timestamp,
--     image_url   varchar(50)  DEFAULT 'https://cdn-icons-png.flaticon.com/512/149/149071.png'
--
-- );
-- DROP TABLE IF EXISTS roles;
-- CREATE TABLE roles
-- (
--     id          bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     name        varchar(50) UNIQUE NOT NULL,
--     permissions varchar(255)       NOT NULL
-- );
--
-- CREATE TABLE userroles
-- (
--     id      bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     user_id bigint NOT NULL UNIQUE REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--     role_id bigint NOT NULL REFERENCES roles (id) ON DELETE RESTRICT ON UPDATE CASCADE
-- );
--
-- DROP TABLE IF EXISTS events;
-- CREATE TABLE events
-- (
--     id          bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     type        varchar(50) UNIQUE NOT NULL CHECK ( type IN
--                                                     ('LOGIN_ATTEMPT', 'LOGIN_ATTEMPT_SUCCESS', 'LOGIN_ATTEMPT_FAILURE',
--                                                      'PROFILE_UPDATE', 'PROFILE_PICTURE_UPDATE', 'ROLE_UPDATE',
--                                                      'ACCOUNT_SETTINGS_UPDATE', 'PASSWORD_UPDATE', 'MFU_UPDATE') ),
--     description varchar(255)       NOT NULL
-- );
--
-- DROP TABLE IF EXISTS userEvents;
-- CREATE TABLE userEvents
-- (
--     id         bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     user_id    bigint NOT NULL REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--     event_id   bigint NOT NULL REFERENCES events (id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     device     varchar(100) DEFAULT NULL,
--     ip_address varchar(100) DEFAULT NULL,
--     created_at timestamp    DEFAULT current_timestamp
-- );
--
-- DROP TABLE IF EXISTS accountVeryfications;
-- CREATE TABLE accountVeryfications
-- (
--     id      bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     user_id bigint UNIQUE       NOT NULL REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--     url     varchar(255) UNIQUE NOT NULL
-- --     date timestamp NOT NULL
-- );
--
-- DROP TABLE IF EXISTS resetPasswordVeryfications;
-- CREATE TABLE resetPasswordVeryfications
-- (
--     id              bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     user_id         bigint UNIQUE       NOT NULL REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--     url             varchar(255) UNIQUE NOT NULL,
--     expiration_date timestamp           NOT NULL
-- );
--
-- DROP TABLE IF EXISTS twoFactorVeryfications;
-- CREATE TABLE twoFactorVeryfications
-- (
--     id              bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     user_id         bigint UNIQUE       NOT NULL REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--     code             varchar(10) UNIQUE NOT NULL,
--     expiration_date timestamp           NOT NULL
-- );



